#include "def_utils.h"


#ifndef MEMBER
#error MEMBER not defined
#endif


static void __PASTE2(add_,MEMBER)(struct info_file* file, void *elem) {

    void *aux = realloc(file->MEMBER, ++file->__PASTE2(num_,MEMBER) * sizeof(*file->MEMBER));

    if (!aux) {

        cvs_error(MEMORY_ERROR);
    }

    file->MEMBER = aux;

    int offset = file->__PASTE2(num_,MEMBER);

    while(--offset && __PASTE2(MEMBER,_cmp)(elem, file->MEMBER + offset - 1) < 0) ;

    memmove(file->MEMBER + offset + 1, file->MEMBER + offset, (file->__PASTE2(num_,MEMBER) - offset - 1) * sizeof(*file->MEMBER));

    memcpy(file->MEMBER + offset, elem, sizeof(*file->MEMBER));
}


static void __PASTE2(remove_,MEMBER)(struct info_file* file, int pos) {

    memmove(file->MEMBER + pos, file->MEMBER + pos + 1, (--file->__PASTE2(num_,MEMBER) - pos) * sizeof(*file->MEMBER));
}


static void* __PASTE2(find_,MEMBER)(struct info_file* file, void *elem) {

    return bsearch(elem, file->MEMBER, file->__PASTE2(num_,MEMBER), sizeof(*file->MEMBER), __PASTE2(MEMBER,_cmp));
}


static void* __PASTE2(find_first_,MEMBER)(struct info_file* file, void *elem) {

    char *ret = __PASTE2(find_,MEMBER)(file, elem);

    if (!ret) return NULL;

    while ((ret -= sizeof(*file->MEMBER)) >= (char*)file->MEMBER && !__PASTE2(MEMBER,_cmp)(ret, elem)) ;

    return ret + sizeof(*file->MEMBER);
}


static void* __PASTE2(find_last_,MEMBER)(struct info_file* file, void *elem) {

    char *ret = __PASTE2(find_,MEMBER)(file, elem);

    if (!ret) return NULL;

    while ((ret += sizeof(*file->MEMBER)) < (char*)file->MEMBER + file->__PASTE2(num_,MEMBER) && !__PASTE2(MEMBER,_cmp)(ret, elem)) ;

    return ret - sizeof(*file->MEMBER);
}


#undef MEMBER

